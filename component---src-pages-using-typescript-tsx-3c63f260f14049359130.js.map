{"version":3,"file":"component---src-pages-using-typescript-tsx-3c63f260f14049359130.js","mappings":"gMAyCA,UA5BwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAM,sBACX,6DACA,8DAC2C,8BAD3C,gEAE8C,iCAF9C,yEAKA,8DAC2C,gCAD3C,qBAEM,gCAFN,iBAEsC,8BAFtC,WAIA,mDACiCD,EADjC,uBAC2D,IACxDD,EAAKG,KAAKC,UAFb,MAIA,mDACkC,KAChC,aAAGC,KAAK,6CAAR,kCAFF,MAOA,QAAC,KAAD,CAAMC,GAAG,KAAT,8B,uFCjCEC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,kBACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,aAGf,eACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,uBAGV,cAAIL,MAAO,CAAEG,OAAQ,KACnB,QAAC,KAAD,CACEN,GAAG,IACHG,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBR,OAWXD,EAAOU,aAAe,CACpBT,UAAU,IAGZ,QCaA,EAxCe,SAAC,GAAkB,IAAD,EAAfU,EAAe,EAAfA,SACVlB,GAAOmB,EAAAA,EAAAA,IAAe,cAU5B,OACE,yBACE,QAAC,EAAD,CAAQX,WAAW,UAAAR,EAAKG,KAAKiB,oBAAV,eAAwBlB,QAAxB,WACnB,eACEO,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,yBAGV,oBAAOI,IACP,kBACET,MAAO,CACLY,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,oBAOE,aAAGlB,KAAK,4BAAR,e,+DC/BV,SAASmB,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMzB,EAAS,EAATA,MAC9BC,GAASgB,EAAAA,EAAAA,IAAe,YAAxBhB,KAcFyB,EAAkBH,GAAetB,EAAKiB,aAAaK,YACnDI,EAAY,UAAG1B,EAAKiB,oBAAR,aAAG,EAAmBlB,MAExC,OACE,QAAC,IAAD,CACE4B,eAAgB,CACdJ,KAAAA,GAEFxB,MAAOA,EACP6B,cAAeF,EAAY,QAAWA,EAAiB,KACvDF,KAAM,CACJ,CACEK,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAS/B,GAEX,CACEgC,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAA9B,EAAKiB,oBAAL,eAAmBe,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAS/B,GAEX,CACE8B,KAAK,sBACLC,QAASL,IAEXQ,OAAOT,KAKfH,EAAIP,aAAe,CACjBS,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["data","path","title","site","buildTime","href","to","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","children","useStaticQuery","siteMetadata","marginTop","Date","getFullYear","Seo","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat"],"sourceRoot":""}